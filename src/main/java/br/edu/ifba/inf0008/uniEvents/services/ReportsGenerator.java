package br.edu.ifba.inf0008.uniEvents.services;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;

import br.edu.ifba.inf0008.uniEvents.model.events.Event;
import br.edu.ifba.inf0008.uniEvents.model.participants.Participant;
import br.edu.ifba.inf0008.uniEvents.utils.Colors;
import br.edu.ifba.inf0008.uniEvents.utils.Lines;


public class ReportsGenerator {
  private static final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");

  public String generateReport(ArrayList<Event> events, String reportTitle, Boolean isDetailed) {
    StringBuilder report = new StringBuilder();
    report.append(Lines.doubleLine()).append("\n");
    report.append(Lines.titleLine(String.format("Report: %s", reportTitle))).append("\n");
    report.append(Lines.titleLine(String.format("Created at: %s", LocalDateTime.now().format(DATE_TIME_FORMATTER)))).append("\n");
    report.append(Lines.titleLine("Generated by: UniEvents")).append("\n");
    report.append(Lines.doubleLine()).append("\n");
    report.append(Lines.titleLine("Events List")).append("\n");
    report.append(Lines.doubleLine()).append("\n");
    if(events.isEmpty()){
      report.append(Lines.multiLineText("No events found for this report.")).append("\n");
    } else {
      for (Event event : events) {
        report.append(summary(event, isDetailed));
      }
    }
    report.append(Lines.doubleLine()).append("\n");
    report.append(Lines.titleLine("End of Report")).append("\n");
    report.append(Lines.doubleLine());
    report.append("\n");
    return report.toString();
  }

  public static String summary(Event event, Boolean isDetailed){
    StringBuilder report = new StringBuilder();
    report.append(Lines.doubleLine()).append("\n");
    report.append(Lines.titleLine("Event: " + event.getType(), Colors.YELLOW_BOLD)).append("\n");
    report.append(Lines.doubleLine()).append("\n");
    report.append(Lines.straightLine()).append("\n");
    report.append(event.toString());
    report.append(Lines.straightLine()).append("\n");
    if(isDetailed && !event.getParticipants().isEmpty()){
      report.append(Lines.doubleLine()).append("\n");
      report.append(Lines.titleLine("Participants", Colors.BLUE_BOLD)).append("\n");
      report.append(Lines.doubleLine()).append("\n");
      for(Participant participant : event.getParticipants().values()){
        report.append(Lines.mixedLines()).append("\n");
        report.append(participant.toString());
        report.append(Lines.mixedLines()).append("\n");
      }
    }
    return report.toString();
  }

  //TODO: create a participantSummary to use in reports and lists
}